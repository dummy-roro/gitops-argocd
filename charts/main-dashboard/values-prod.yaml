namespace: main-dashboard-prod
env: production
replicaCount: 3

maintainer: frontend-team@example.com
description: "Production deployment for the main-dashboard application"

# ===== FRONTEND CONFIG =====
image:
  registry: ghcr.io/your-org
  mainDashboard:
    name: main-dashboard
    tag: v1.2.3
    pullPolicy: IfNotPresent

imagePullSecrets:
  - name: regcred

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000

service:
  mainDashboard:
    type: ClusterIP
    port: 3000
    targetPort: 3000

envVars:
  REACT_APP_BACKEND_URL: "https://main-dashboard.example.com/api"

mainDashboard:
  livenessProbe:
    path: /healthz
    port: 3000
    initialDelaySeconds: 10
    periodSeconds: 15

  readinessProbe:
    path: /ready
    port: 3000
    initialDelaySeconds: 5
    periodSeconds: 10

  startupProbe:
    path: /startup
    port: 3000
    initialDelaySeconds: 0
    periodSeconds: 5
    failureThreshold: 10

# ===== BACKEND CONFIG =====
backend:
  replicaCount: 2
  imagePullSecret: regcred
  image:
    repository: ghcr.io/your-org/main-dashboard-api
    tag: v1.0.0
    pullPolicy: Always

  envVars:
    MONGO_CONN_STR: mongodb://main-dashboard-mongo-secret:27017/dashboarddb

  secrets:
    mongo:
      name: main-dashboard-mongo-secret
      usernameKey: MONGO_USERNAME
      passwordKey: MONGO_PASSWORD

  service:
    type: ClusterIP
    port: 5000
    targetPort: 5000

  probes:
    liveness:
      enabled: true
      path: /healthz
      port: 5000
      initialDelaySeconds: 5
      periodSeconds: 10

    readiness:
      enabled: true
      path: /ready
      port: 5000
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1

    startup:
      enabled: true
      path: /startup
      port: 5000
      initialDelaySeconds: 5
      periodSeconds: 10
      failureThreshold: 10

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "256Mi"

  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000

  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

# ===== MONGODB SECRET =====
mongo:
  secretName: main-dashboard-mongo-secret
  username: dashboard_user
  password: s3cr3tP@ssw0rd
  database: dashboarddb

# ===== INGRESS CONFIG =====
ingress:
  enabled: true
  className: nginx
  host: main-dashboard.example.com
  tls:
    enabled: true
    secretName: main-dashboard-tls
    certificateName: main-dashboard-cert
